name: workflow_cicd_api
run-name: ${{ github.actor }} GitHub Actions Workflow CICD API üöÄ
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
    build:
      name: Build_and_analyze
      runs-on: ubuntu-latest
      steps:
        # recopie du depot in executeur
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

        - name: Start MySql #d√©marrage du service mysql
          run: sudo service mysql start

        - name: Create Database from script
          run: mysql -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} -e "source infra/mysql/dump/springboot.sql"

        - name: Set up JDK 21
          uses: actions/setup-java@v4
          with:
            java-version: 21
            distribution: 'zulu' # Alternative distribution options are available.
        - name: Cache SonarQube packages
          uses: actions/cache@v4
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Maven packages
          uses: actions/cache@v4
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        - name: Build and analyze
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=neojero_apiSpringboot2025

        - name: Charging artefact   # permet de charger un artefact
          uses: actions/upload-artifact@v4
          with:
              name: package.jar
              path: target/*.jar
              retention-days: 1

        # message de fin indiquant que tout s'est bien pass√©
        - run: echo "üçè This job's status is ${{ job.status }}."

    # Notification
    Discord:
      name: Discord
      runs-on: ubuntu-latest
      needs: build

      steps:
        - name: Discord notification
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          uses: sarisia/actions-status-discord@v1
          if: always()
          with:
            description: 'The project SpringBoot API 2025 has been deployed.'