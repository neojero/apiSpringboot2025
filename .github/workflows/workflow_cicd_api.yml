name: workflow_cicd_api
run-name: ${{ github.actor }} GitHub Actions Workflow CICD API üöÄ
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
    build:
      name: Build_and_analyze
      runs-on: ubuntu-latest
      steps:
        # recopie du depot in executeur
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

        - name: Start MySql # demarrage du service mysql
          run: sudo service mysql start

        - name: Create Database from script
          run: mysql -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} -e "source infra/mysql/dump/springboot.sql"
          env:
            SPRING_PROFILES_ACTIVE: cicd

        - name: Set up JDK 21
          uses: actions/setup-java@v4
          with:
            java-version: 21
            distribution: 'zulu' # Alternative distribution options are available.
        - name: Cache SonarQube packages
          uses: actions/cache@v4
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Maven packages
          uses: actions/cache@v4
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        - name: Build and analyze
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=neojero_apiSpringboot2025 -Dspring.profiles.active=cicd

        - name: Charging artefact   # permet de charger un artefact
          uses: actions/upload-artifact@v4
          with:
              name: package.jar
              path: target/*.jar
              retention-days: 1

        # message de fin indiquant que tout s'est bien pass√©
        - run: echo "üçè This job's status is ${{ job.status }}."

  # Notification
    Discord_notif_bluid:
      name: Discord
      runs-on: ubuntu-latest
      needs: build

      steps:
        - name: Discord notification
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          uses: sarisia/actions-status-discord@v1
          if: always()
          with:
            description: 'The project SpringBoot API 2025 has been built by Maven.'

    docker-build-image-api:
      # verifie que le declenchement provient de la branche main
      if: ${{ github.ref == 'refs/heads/main' }}
      runs-on: ubuntu-latest
      needs:
        - build
      steps:
        # recuperation du d√©p√¥t
        - uses: actions/checkout@v4

        # installation des outils pour docker
        - name: Set Up QEMU
          uses: docker/setup-qemu-action@v3

        - name: Set Up Docker Build
          uses: docker/setup-buildx-action@v3

        # connexion au docker hub
        - name: Connect to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USER }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        # recup√©ration de l'artefact
        - name: Download a single artifact
          uses: actions/download-artifact@v4
          with:
            name: package.jar

        # juste pour le controle
        - name: List files in the repository
          run: ls ${{ github.workspace }}

        # construction de l'image docker et push sur dockerHub
        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: .
            file: Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USER }}/apispringboot2025:latest

        # message de fin indiquant que tout s'est bien passe
        - run: echo "üçè This job's status is ${{ job.status }}."

    # Notification
    Discord_for_docker:
      name: Discord
      runs-on: ubuntu-latest
      needs: docker-build-image-api

      steps:
        - name: Discord notification
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          uses: sarisia/actions-status-discord@v1
          if: always()
          with:
            description: 'The project SpringBoot API 2025 has been deployed in Docker Hub.'